/*

615. Average Salary: Departments VS Company

https://leetcode.com/problems/average-salary-departments-vs-company/

CREATE TABLE SALARY (
id number(5),
employee_id number(5),
amount number(5),
pay_date date
);

INSERT INTO SALARY VALUES (1,1,9000,DATE'2017-03-31');
INSERT INTO SALARY VALUES (2,2,6000,DATE'2017-03-31');
INSERT INTO SALARY VALUES (3,3,10000,DATE'2017-03-31');
INSERT INTO SALARY VALUES (4,1,7000,DATE'2017-02-28');
INSERT INTO SALARY VALUES (5,2,6000,DATE'2017-02-28');
INSERT INTO SALARY VALUES (6,3,8000,DATE'2017-02-28');

CREATE TABLE EMPLOYEE (
employee_id number(5),
department_id number(4)
);

INSERT INTO EMPLOYEE VALUES (1,1);
INSERT INTO EMPLOYEE VALUES (2,2);
INSERT INTO EMPLOYEE VALUES (3,2);


{"headers":{"Salary":["id","employee_id","amount","pay_date"],
"Employee":["employee_id","department_id"]},
"rows":
{"Salary":[
[1,1,9000,"2017/03/31"],
[2,2,6000,"2017/03/31"],
[3,3,10000,"2017/03/31"],
[4,1,7000,"2017/02/26"],
[5,2,6000,"2017/02/27"],
[6,3,8000,"2017/02/22"]],
"Employee":
[[1,1],[2,1],[3,1]]}}

INSERT INTO SALARY VALUES (1,1,9000,DATE'2017-03-31');
INSERT INTO SALARY VALUES (2,2,6000,DATE'2017-03-31');
INSERT INTO SALARY VALUES (3,3,10000,DATE'2017-03-31');
INSERT INTO SALARY VALUES (4,1,7000,DATE'2017-02-26');
INSERT INTO SALARY VALUES (5,2,6000,DATE'2017-02-27');
INSERT INTO SALARY VALUES (6,3,8000,DATE'2017-02-22');

*/



WITH T1 AS
(
SELECT ID, SALARY.EMPLOYEE_ID,PAY_DATE ,extract (year from TRUNC(PAY_DATE,'MM'))||'-'|| to_char(PAY_DATE,'MM')PAY_MON, 
AMOUNT, EMPLOYEE.DEPARTMENT_ID AS DEPT_ID
FROM SALARY
LEFT JOIN EMPLOYEE 
ON SALARY.EMPLOYEE_ID = EMPLOYEE.EMPLOYEE_ID
ORDER BY ID, PAY_MON
)
,
T2 AS (
SELECT extract (year from TRUNC(PAY_DATE,'MM'))||'-'|| to_char(PAY_DATE,'MM') PAY_MON, ROUND(AVG(AMOUNT),2) AS AVG_AMT
FROM SALARY 
GROUP BY extract (year from TRUNC(PAY_DATE,'MM'))||'-'|| to_char(PAY_DATE,'MM')
ORDER BY PAY_MON
)
,

T3 AS (
SELECT PAY_MON AS PAY_MONTH, DEPT_ID AS DEPARTMENT_ID, ROUND(AVG(AMOUNT),2) AS AMOUNT
FROM T1
GROUP BY PAY_MON, DEPT_ID

)


SELECT T3.PAY_MONTH, T3.DEPARTMENT_ID,Amount, CASE
WHEN T3.AMOUNT > T2.AVG_AMT THEN 'higher'
WHEN T3.AMOUNT < T2.AVG_AMT THEN 'lower'
else 'same'
END AS comparison
from T3 
LEFT JOIN T2
ON T3.PAY_MONTH = T2.PAY_MON
order by T3.department_id, T3.PAY_MONTH